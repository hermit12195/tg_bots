from telegram import Update
from telegram.ext import ContextTypes

from database.db import db_conn
from handlers.welcome_handler import welcome
import logging


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    Represents START handler
    """
    try:
        logging.info("START handler is triggered")
        context.user_data.clear()
        context.chat_data.clear()
        await db_conn()
        await update.message.reply_text(
            "–ü—Ä–∏–≤—ñ—Ç! –Ø —Ç–≤—ñ–π –ø–æ–º—ñ—á–Ω–∏–∫ –∑ —Ç–∞—Ä–≥–µ—Ç–æ–≤–∞–Ω–æ—ó —Ä–µ–∫–ª–∞–º–∏. –î–æ–ø–æ–º–æ–∂—É –æ–±—Ä–∞—Ç–∏ –ø–æ—Å–ª—É–≥—É, "
            "–ø–æ–¥–∏–≤–∏—Ç–∏—Å—å –ø—Ä–∏–∫–ª–∞–¥–∏ —Ä–æ–±—ñ—Ç –∞–±–æ –∑–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤–∫—É - —Ç–∏—Å–Ω–∏ –Ω–∞ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π –ø—É–Ω–∫—Ç –Ω–∏–∂—á–µ üëá")
        return await welcome(update, context)
    except Exception as error:
        logging.error(f"Error in START handler - {error}")
